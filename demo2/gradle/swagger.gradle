/*
 * Plugin that provides API-first development using OpenAPI-generator to
 * generate Spring-MVC endpoint stubs at compile time from an OpenAPI definition file
 */
buildscript {
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.openapitools:openapi-generator-gradle-plugin:4.3.1"
    }
}

apply plugin: "org.openapi.generator"

def specPath = "$rootDir/src/main/resources/swagger/api.yml".toString()

task buildJavaClient(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
    generatorName = "java"
    inputSpec = specPath
    outputDir = "${buildDir}/demo2-client"
    apiPackage = "dev.appkr.demo2.java.api"
    modelPackage = "dev.appkr.demo2.java.api.model"
    configOptions = [
            title: project.name,
            useTags: "true",
            dateLibrary: "java8",
            java8: "true",
            hideGenerationTimestamp: "true",
            library: "resttemplate",
            serializableModel: "true",
            serializationLibrary: "jackson",
            bigDecimalAsString: "true",
            useRuntimeException: "true"
    ]
    validateSpec = true
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = specPath
    outputDir = "$buildDir/openapi".toString()
    apiPackage = "dev.appkr.demo2.web.api"
    modelPackage = "dev.appkr.demo2.web.api.model"
    apiFilesConstrainedTo = [""]
    modelFilesConstrainedTo = [""]
    supportingFilesConstrainedTo = ["ApiUtil.java"]
    configOptions = [delegatePattern: "true", title: "demo-2"]
    validateSpec = true
    importMappings = [Problem:"org.zalando.problem.Problem"]
}

sourceSets {
    main {
        java {
            srcDir file("${project.buildDir.path}/openapi/src/main/java")
        }
    }
}

compileJava.dependsOn("openApiGenerate", "buildJavaClient")
